{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { faArrowUp, faArrowDown } from '@fortawesome/free-solid-svg-icons';\nimport { VoteType } from './vote-type';\nimport { throwError } from 'rxjs';\nlet VoteButtonComponent = class VoteButtonComponent {\n  constructor(voteService, authService, postService, toastr) {\n    this.voteService = voteService;\n    this.authService = authService;\n    this.postService = postService;\n    this.toastr = toastr;\n    this.faArrowUp = faArrowUp;\n    this.faArrowDown = faArrowDown;\n    this.votePayload = {\n      voteType: undefined,\n      postId: undefined\n    };\n    this.authService.loggedIn.subscribe(data => this.isLoggedIn = data);\n  }\n  ngOnInit() {\n    this.updateVoteDetails();\n  }\n  upvotePost() {\n    this.votePayload.voteType = VoteType.UPVOTE;\n    this.vote();\n    this.downvoteColor = '';\n  }\n  downvotePost() {\n    this.votePayload.voteType = VoteType.DOWNVOTE;\n    this.vote();\n    this.upvoteColor = '';\n  }\n  vote() {\n    this.votePayload.postId = this.post.id;\n    this.voteService.vote(this.votePayload).subscribe(() => {\n      this.updateVoteDetails();\n    }, error => {\n      this.toastr.error(error.error.message);\n      throwError(error);\n    });\n  }\n  updateVoteDetails() {\n    this.postService.getPost(this.post.id).subscribe(post => {\n      this.post = post;\n    });\n  }\n};\n__decorate([Input()], VoteButtonComponent.prototype, \"post\", void 0);\nVoteButtonComponent = __decorate([Component({\n  selector: 'app-vote-button',\n  templateUrl: './vote-button.component.html',\n  styleUrls: ['./vote-button.component.css']\n})], VoteButtonComponent);\nexport { VoteButtonComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}